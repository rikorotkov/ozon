package com.floda.home.ozon;

import com.floda.home.model.Order;
import com.floda.home.telegram.TelegramBotService;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import java.util.Set;
import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.TimeUnit;

public class OzonService {

    private static final Logger log = LoggerFactory.getLogger(OzonService.class);
    private final TelegramBotService bot;
    private final ScheduledExecutorService scheduler = Executors.newScheduledThreadPool(1);

    public OzonService(TelegramBotService bot) {
        this.bot = bot;
    }

    public void startCheckingOrders() {
        log.info("üì° –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∑–∞–∫–∞–∑–æ–≤...");
        scheduler.scheduleAtFixedRate(this::checkForOrders, 0, 30, TimeUnit.SECONDS);
    }

    private void checkForOrders() {
        try {
            log.info("–ü—Ä–æ–≤–µ—Ä—è—é –Ω–æ–≤—ã–µ –∑–∞–∫–∞–∑—ã ...");
            Set<Order> newOrders = OzonClient.getNewOrders();  // –ü–æ–ª—É—á–∞–µ–º –Ω–æ–≤—ã–µ –∑–∞–∫–∞–∑—ã —Å –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
            for (Order order : newOrders) {
                String message = "üì¶ –ù–æ–≤—ã–π –∑–∞–∫–∞–∑: \n" +
                        "üÜî –ù–æ–º–µ—Ä: " + order.getOrderId() + "\n" +
                        "üí∞ –°—É–º–º–∞: " + order.getTotalAmount() + " —Ä—É–±.\n" +
                        "üíº –¢–æ–≤–∞—Ä: " + order.getProductName() + "\n" +
                        "üî¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: " + order.getQuantity();

                // –ï—Å–ª–∏ –µ—Å—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫–∞ —Ç–æ–≤–∞—Ä–∞, –ø—Ä–∏–∫—Ä–µ–ø–ª—è–µ–º –µ—ë
                if (order.getProductImageUrl() != null) {
                    bot.sendOrderNotification(message, order.getProductImageUrl());
                } else {
                    bot.sendOrderNotification(message, null);
                }

                log.info("‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {}", message);
            }
        } catch (Exception e) {
            log.error("üö® –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∑–∞–∫–∞–∑–æ–≤: {}", e.getMessage());
        }
    }

    public void stopCheckingOrders() {
        scheduler.shutdown();
        log.info("üõë –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞–∫–∞–∑–æ–≤.");
    }

}
